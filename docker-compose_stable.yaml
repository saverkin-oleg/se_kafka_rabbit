version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          memory: 512M

  kafka1:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka1
    ports:
      - "9093:9093"
      - "9100:9100"
      - "9099:9099"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://89.169.182.8:9093
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_JMX_PORT: 9099
      KAFKA_JMX_HOSTNAME: kafka1
      KAFKA_OPTS: "-javaagent:/usr/app/jmx_prometheus_javaagent.jar=9100:/usr/app/jmx_exporter_config.yaml"
    volumes:
      - ./jmx/jmx_prometheus_javaagent.jar:/usr/app/jmx_prometheus_javaagent.jar
      - ./jmx/jmx_exporter_config.yaml:/usr/app/jmx_exporter_config.yaml

    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G

  kafka2:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka2
    ports:
      - "9095:9095"
      - "9101:9101" # JMX порт для брокера 2
      - "9809:9809"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9094,OUTSIDE://89.169.182.8:9095
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9094,OUTSIDE://0.0.0.0:9095
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_JMX_PORT: 9809
      KAFKA_JMX_HOSTNAME: kafka2
      KAFKA_OPTS: "-javaagent:/usr/app/jmx_prometheus_javaagent.jar=9101:/usr/app/jmx_exporter_config.yaml"
    volumes:
      - ./jmx/jmx_prometheus_javaagent.jar:/usr/app/jmx_prometheus_javaagent.jar
      - ./jmx/jmx_exporter_config.yaml:/usr/app/jmx_exporter_config.yaml
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G

  kafka3:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka3
    ports:
      - "9097:9097"
      - "9102:9102" # JMX порт для брокера 3
      - "9709:9709"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka3:9096,OUTSIDE://89.169.182.8:9097
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9096,OUTSIDE://0.0.0.0:9097
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_JMX_PORT: 9709
      KAFKA_JMX_HOSTNAME: kafka3
      KAFKA_OPTS: "-javaagent:/usr/app/jmx_prometheus_javaagent.jar=9102:/usr/app/jmx_exporter_config.yaml"
    volumes:
      - ./jmx/jmx_prometheus_javaagent.jar:/usr/app/jmx_prometheus_javaagent.jar
      - ./jmx/jmx_exporter_config.yaml:/usr/app/jmx_exporter_config.yaml
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          memory: 1G

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9094,kafka3:9096
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 256M

  rabbitmq-node1:
    image: rabbitmq:3-management
    container_name: rabbitmq-node1
    hostname: rabbitmq-node1
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_cookie
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "15672:15672"  # Интерфейс управления
      - "5672:5672"    # Порт AMQP
    networks:
      - rabbitmq_cluster
    volumes:
      - rabbitmq-node1-data:/var/lib/rabbitmq
    command: rabbitmq-server

  rabbitmq-node2:
    image: rabbitmq:3-management
    container_name: rabbitmq-node2
    hostname: rabbitmq-node2
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_cookie
    networks:
      - rabbitmq_cluster
    depends_on:
      - rabbitmq-node1
    volumes:
      - rabbitmq-node2-data:/var/lib/rabbitmq
    command: rabbitmq-server

  rabbitmq-node3:
    image: rabbitmq:3-management
    container_name: rabbitmq-node3
    hostname: rabbitmq-node3
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_cookie
    networks:
      - rabbitmq_cluster
    depends_on:
      - rabbitmq-node1
    volumes:
      - rabbitmq-node3-data:/var/lib/rabbitmq
    command: rabbitmq-server

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
  rabbitmq-node1-data:
  rabbitmq-node2-data:
  rabbitmq-node3-data:

networks:
  rabbitmq_cluster:
    driver: bridge
  default:
    driver: bridge
